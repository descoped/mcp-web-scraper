name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run full CI validation
        run: |
          npm run lint:full
          npm run test:unit -- tests/unit/core/pageManager.test.ts
          npm run test:unit -- tests/unit/tools/screenshotTool.test.ts
          npm run test:unit -- tests/unit/tools/consentTool.test.ts
          npm run test:unit -- tests/unit/tools/browserInteraction.test.ts
          npm run test:unit -- tests/unit/tools/scrapeArticleTool.test.ts
          npm run build

      - name: Extract version from tag
        id: version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major=$(echo $VERSION | cut -d. -f1)" >> $GITHUB_OUTPUT
          echo "minor=$(echo $VERSION | cut -d. -f1-2)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            descoped/mcp-web-scraper:latest
            descoped/mcp-web-scraper:${{ steps.version.outputs.tag }}
            descoped/mcp-web-scraper:${{ steps.version.outputs.version }}
            descoped/mcp-web-scraper:${{ steps.version.outputs.major }}
            descoped/mcp-web-scraper:${{ steps.version.outputs.minor }}
          platforms: linux/amd64,linux/arm64

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: Release ${{ steps.version.outputs.tag }}
          body: |
            ## MCP Web Scraper ${{ steps.version.outputs.tag }}
            
            ### Docker Image
            ```bash
            docker pull descoped/mcp-web-scraper:${{ steps.version.outputs.tag }}
            ```
            
            ### Available Tags
            - `descoped/mcp-web-scraper:latest`
            - `descoped/mcp-web-scraper:${{ steps.version.outputs.tag }}`
            - `descoped/mcp-web-scraper:${{ steps.version.outputs.version }}`
            - `descoped/mcp-web-scraper:${{ steps.version.outputs.major }}`
            - `descoped/mcp-web-scraper:${{ steps.version.outputs.minor }}`
            
            ### Changes
            See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          draft: false
          prerelease: false

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `‚ùå Release failed for tag ${context.ref}. Please check the [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details.`
            });